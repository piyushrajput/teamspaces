<apex:page sidebar="false" tabStyle="Team__c" controller="AdminProfileListController">

	<!-- Javascript -->
	<!-- Prototype + Scriptaculous -->
	<script type="text/javascript" src="{!URLFOR($Resource.Script_aculo_us, 'prototype.js')}"></script>
	<script type="text/javascript" src="{!URLFOR($Resource.Script_aculo_us, 'scriptaculous.js')}"></script>
	<script type="text/javascript" src="{!URLFOR($Resource.Script_aculo_us, 'effects.js')}"></script>
	<script type="text/javascript" src="{!URLFOR($Resource.commonResources, '/inc/js/modal.js')}"></script>

		<!-- Portal Support -->
	<script src="{!$Resource.portalSupport}" />

	<!-- Common Js for All Sections -->
    <script src="{!URLFOR($Resource.TeamsResources, 'inc/js/common.js')}" />
    <!--<script src="{!URLFOR($Resource.TeamsResources, 'inc/js/admin.js')}" />-->
    <script type="text/javascript" src="{!URLFOR($Resource.commonResources, 'inc/js/common.js')}"></script>
	<script type="text/javascript" src="{!URLFOR($Resource.commonResources, 'inc/js/modal.js')}"></script>
	<script type="text/javascript" src="{!URLFOR($Resource.TeamsResources, 'inc/js/sorttable.js')}"></script>

    <!-- CSS styles for Portal Integration -->
    <apex:stylesheet value="{!URLFOR($Resource.portalStyles, 'portal.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.TeamsResources, 'inc/css/headerTeams.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.TeamsResources, 'inc/css/widgetTeam.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.commonResources, 'inc/css/teamsTable.css')}" />

	<!-- CSS de TS -->
	<link rel="stylesheet"  href="{!URLFOR($Resource.commonResources, '/inc/css/modal.css')}"/>
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/commonLayout.css')}" />	
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/teamDetailEdit.css')}" />
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/teamOverlyManage.css')}" />	
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/teamMemberList.css')}" />	
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/teamListContributorMemberView.css')}" />	
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/teamProfileList.css')}" />
	<link rel="stylesheet"  href="{!URLFOR($Resource.TeamsResources, '/inc/css/DeleteTeamProfile.css')}"/>		
	<apex:stylesheet value="{!URLFOR($Resource.commonResources, 'inc/css/fonts.css')}" /> 

	<!-- ### Ajax Toolkit Include ### -->
	<script src="/soap/ajax/12.0/connection.js" type="text/javascript" />
	<script>
		/**
		* Initialize toolkit connection
		*@void
		*/
		function init(){
			sforce.connection.sessionId = '{!$Api.Session_ID}';
		}
		
		function desactivateType_activateType(flag){
			var spanReactivate = document.getElementById('reactivateId');
			var spanDelete = document.getElementById('deleteId');
			var spanClone = document.getElementById('cloneId');
			var spanSeparator = document.getElementById('separatorId');
			var spanEdit = document.getElementById('editId');
			var td = document.getElementById('tdId');
			var spanDesactivate = document.getElementById('desactivateId');
			
			if(flag){
			
				td.style.color = 'red';
				spanSeparator.style.display = 'none';
				spanReactivate.style.display = 'inline';
				spanDelete.style.display = 'inline';
				spanClone.style.display = 'none';
				spanDesactivate.style.display = 'none';
				spanEdit.style.display = 'none';
			}
			else{
				td.style.color = '#0F6CB0';
				spanSeparator.style.display = 'inline';
				spanReactivate.style.display = 'none';
				spanDelete.style.display = 'none';
				spanClone.style.display = 'inline';
				spanDesactivate.style.display = 'inline';
				spanEdit.style.display = 'inline';
			}
		}

		function rollOver(tr){
			
			tr.style.background = '#EFEFEF';
		}
		function rollOut(tr){
			tr.style.background = '#FFFFFF';
		}
		
		/** ### Implementation Function's ### **/
		
		var reloadEvent = null;

		/**
		* Get Team Type
		*@param Id idType
		**/    	
		function getTeamType(idType){
			init();
			result = sforce.connection.query("select Id, Name, Description__c from TeamType__c where Id='"+idType+"'");
			records = result.getArray("records");
			if(records.length > 0){
				var eventSave = $('teamTypeEventSave');
				eventSave.innerHTML = '<a href="javascript:;" onclick="saveTeamType(\''+idType+'\')" class="button">Update Type</a>';
				$('teamTypeName').value = records[0].Name;
				$('teamTypeDescription').value = (records[0].Description__c) ? records[0].Description__c : '';
			}
		}
		
		/**
		* Save & Update Team Type
		*@param Id idType
		**/
		function saveTeamType(idType){
			init();    		
			teamType = new sforce.SObject("TeamType__c");
			teamType.Name = $('teamTypeName').value
			teamType.Description__c = $('teamTypeDescription').value;
			if(teamType.Name != ''){
				if(idType){
					result = sforce.connection.query("select Name from TeamType__c where Name ='" + teamType.Name + "' and Id != '" + idType + "'");    		
					records = result.getArray("records");		
					if(records.length == 0){				
						teamType.Id = idType;
						result = sforce.connection.update([teamType],{onSuccess:function(){$(reloadEvent).onclick();}, onFailure:function(){}});
					}else{
						alert(teamType.Name + ' is already used. Please enter an unique name.');
						return;
					}			
				}else{
					result = sforce.connection.query("select Name from TeamType__c where Name ='" + teamType.Name + "'");    		
					records = result.getArray("records");				
					if(records.length == 0){	
						result = sforce.connection.create([teamType]);
						if(result[0].getBoolean("success")){
							location.href = '/apex/AdminWidgetConfig?id='+result[0].id;
						}
					}else{
						alert(teamType.Name + ' is already used. Please enter an unique name.');
						return;
					}			
				}
						
				modal.close();
			}else{
				alert('Please enter a name for the team type');
			}
		}
		
		/**
		* Desactivate Team Type
		*@param Id idType
		**/    	
		function activateTeamType(idType, state){
			init();
			teamType = new sforce.SObject("TeamType__c");
			teamType.Id = idType;
			teamType.IsActive__c = state;
			result = sforce.connection.update([teamType],{onSuccess:function(){$(reloadEvent).onclick();}, onFailure:function(){}}); 
		}
		
		/**
		*Get all teams for one team type
		*@param Id idType
		*/
		function getTeams(idType){
			init();
			$('desactivateEventButton').innerHTML = '<input class="ContinueBtn" type="button" onclick="activateTeamType(\''+ idType +'\', \'false\'); modal.close();" value="Continue and deactivate"  />';
			result = sforce.connection.query("select Name from Team__c where TeamType__c ='" + idType + "'");    		
			records = result.getArray("records");
			if(records.length > 0){
				var teamsDiv = $('teamTypeTeams');
				teamsDiv.innerHTML = '<span class="inputInfoDark">The following teams use this team type:</span><br />';
				for(var it=0; it < records.length; it++){
					teamsDiv.innerHTML += '<span class="inputInfoMedium">- ' + records[it].Name + '</span><br />';
				}
			}
		}
		
		/**
		* Add remove event on remove team type overlay 
		*@param Id idType
		*/
		function injectEventRemove(idType){
			var removeEvent = $('removeTypeEvent');
			removeEvent.innerHTML = '<a href="javascript:;" onclick="deleteTeamType(\''+idType+'\'); modal.close();" class="button">Continue and remove</a>';
		}
		
		
		/**
		* Delete team type
		*@param Id idType
		*/
		function deleteTeamType(idType){
			 init();
		         var remove = sforce.connection.deleteIds([idType],
				{onSuccess:function(){$(reloadEvent).onclick(); modal.close(); deleteTeamTypeApexPage(idType);}, onFailure:function(){}}
			 );
		}
		
		function deleteTeamTypeApexPage(idType){
		         init();
		         var detailPage = 'TeamsDetail' + idType;
		         result_ = sforce.connection.query("Select Id from ApexPage where Name = '" + detailPage + "'");
		         records_ = result_.getArray("records");
		         var remove = sforce.connection.deleteIds([records_[0].Id]);
		}
		
		/**
		* Get team profile
		*@param Id idProfile
		*/
		function getTeamProfile(idProfile){
			init();
			$('saveProfileEvent').innerHTML = '<a href="javascript:;" class="button" onclick="createNewProfile(\''+idProfile+'\');">Update profile</a>';
			result = sforce.connection.query("select Name, Description__c from TeamProfile__c where Id ='" + idProfile + "'");    		
			records = result.getArray("records");
			$('teamProfileName').value = records[0].Name;
			$('teamProfileDescription').value = (records[0].Description__c) ? records[0].Description__c : '';
		}
		
		
		
		/**
		* Create new team profile
		*@param Id idProfile
		*/
		function createNewProfile(idProfile){
			init();
			teamProfile = new sforce.SObject("TeamProfile__c");
			teamProfile.Name = $('teamProfileName').value;
			teamProfile.Description__c = $('teamProfileDescription').value;
			if(teamProfile.Name != ''){	
				if(idProfile){
					result = sforce.connection.query("select Name from TeamProfile__c where Name ='" + teamProfile.Name + "' and Id != '"+idProfile+"'");    		
					records = result.getArray("records");				
					if(records.length == 0){
						teamProfile.Id = idProfile;
						result = sforce.connection.update([teamProfile],{onSuccess:function(){$(reloadEvent).onclick();}, onFailure:function(){}});
					}else{
						alert(teamProfile.Name + ' is already used. Please enter an unique name.');
						return;
					}				
				}else{
					result = sforce.connection.query("select Name from TeamProfile__c where Name ='" + teamProfile.Name +"'");    		
					records = result.getArray("records");
					if(records.length == 0){				
						result = sforce.connection.create([teamProfile]);			
						if(result[0].getBoolean("success")){
							location.href = '/apex/AdminProfile?id='+result[0].id;
						}
					}else{
						alert(teamProfile.Name + ' is already used. Please enter an unique name.');
						return;
					}
				}
				modal.close();
			}else{
				alert('Please enter a name for the team profile');
			}
		}
		
		
		/**
		*Get Count Team Members for team profile
		*@param Id idProfile
		*/
		var profileToRemoveId = '';
		function getCountMembersForTeamProfile (idProfile, name){
			init();
			result = sforce.connection.query("select count() from TeamMember__c where TeamProfile__c ='" + idProfile + "'");    	
			profileToRemoveId = idProfile;
			if(result.size > 0){
				$('teamProfileNameLabel').innerHTML = name;
				$('countProfileUsers').innerHTML = result.size + ' users are assigned to this profile';
				resultProfiles = sforce.connection.query("select Id, Name from TeamProfile__c where Id !='" + profileToRemoveId + "' order by Name");
				recordsProfiles = resultProfiles.getArray("records");
				//$(oldProfileElementId).value = idProfile;
				$('teamProfileSelect').innerHTML = '';
				for(var it=0; it < recordsProfiles.length; it++){
					$('teamProfileSelect').innerHTML += '<option value="' + recordsProfiles[it].Id + '">' + recordsProfiles[it].Name + '</option>';
				}
				createOverlay('', 'removeTeamProfile', '250', 'showSelect()');
			}else{
				//window.alert('idProfile: ' + idProfile);
				deleteTeamProfile (false);
			}
		}
		
		/**
		*Delete team profile
		*@pram Id idProfile
		*/
		function deleteTeamProfile (members){
			 init();
			 //window.alert('oldProfileElementId:' + profileToRemoveId + ' newProfileElementId:' + $F('teamProfileSelect'));
			 if(members){
				$(oldProfileElementId).value = profileToRemoveId;
				$(newProfileElementId).value = $F('teamProfileSelect');
				//alert('jojo to reasing...');
				reassignEvent();
			 }else{
			 	var remove = sforce.connection.deleteIds([profileToRemoveId],
					{
						onSuccess:function(){
								reloadProfileList();
							}, 
						onFailure:function(){}
					}
			 	);
			 }
			 modal.close();
		}
		
		function removeTeamProfile (oldIdInput, newIdInput, profileListModeInput) {
			$(profileListModeInput).value = profileListModeInput;
			$(oldIdInput).value = oldIdInput;
			$(newIdInput).value = $('teamProfileSelect').value;
			window.alert('oldIdInput:' + oldIdInput + ' newIdInput:' + newIdInput + ' profileListModeInput:' + profileListModeInput);
		}
		
	</script>    
	
	<style>
		div.holder {
			min-height: 0px !important;
		}
		* html div.main_cont div.holder {
			height: auto;
		}
	</style> 
    
    <!-- ### Overlay's Includes ### -->
    <apex:include pageName="AdminOverlayNewTeamType" />
	<apex:include pageName="AdminOverlayNewProfile" />
	<apex:include pageName="AdminOverlayRemoveTeamProfile" />   
	
	<!-- Initialize the overlay box for modal.js -->
	<a href="#modal_container" id="initializeModal" style="display:none;"></a>
	<div id="modal_container"></div>
	<script>createOverlay('initializeModal')</script> 	 
	
	<script>
		function showSelect () {		
			var inputSelect = $('teamProfileSelect');
			if (inputSelect != null) {
				inputSelect.style.visibility = 'visible';
			}
		}
		
		/**
		* Get URL param
		*@return string param
		*@param string param
		*/
		function getURLParam(strParamName){
		  var strReturn = "";
		  var strHref = window.location.href;
		  if ( strHref.indexOf("?") > -1 ){
		    var strQueryString = strHref.substr(strHref.indexOf("?"));
		    var aQueryString = strQueryString.split("&");
		    for ( var iParam = 0; iParam < aQueryString.length; iParam++ ){
		      if (aQueryString[iParam].indexOf(strParamName + "=") > -1 ){
		        var aParam = aQueryString[iParam].split("=");
		        strReturn = aParam[1];
		        break;
		      }
		    }
		  }
		  return unescape(strReturn);
		}
		
		/**
		* Show message to user div
		*@void
		*@param string message
		*@param string type
		*/
		function showMessageToUser(message, type){
			var messageDiv = $('infoToUser');
			var imageInfo = '{!URLFOR($Resource.TeamsResources, 'images/layout/icons/WidgetConfig/infoBig.gif')}';
			var imageSuccess = '{!URLFOR($Resource.TeamsResources, 'images/layout/icons/WidgetConfig/checkNew.gif')}';
			var currentSource = (type == 'success') ? imageSuccess : imageInfo;
			markup = '<img src="'+currentSource+'" />';
			markup += '<div>' + message + '</div>';
			messageDiv.innerHTML = markup;
			Effect.Appear('infoToUser');
		}		
		
		/**
		* Show message on action success
		*@void
		*/
		function showActionSuccess (){
			var success = getURLParam('success');
			var message = '';
			switch(success){
				case 'clone':
					message = 'Cloned new {!$ObjectType.Team__c.label} Profile.';
				break;
				case 'edit':
					message = 'Updated {!$ObjectType.Team__c.label} Profile.';
				break;
				case 'create':
					message = 'Created new {!$ObjectType.Team__c.label} Profile.';			
				break;
			}
			if(message != ''){
				showMessageToUser(message, 'success');
			}
		}	
			
		window.onload = showActionSuccess
		
	</script>
	<style>
		div.divblackbtnProfileCenterMargin {
			margin-left: 0px !important;
		}
		.informationPanel {
			background-color:#FFFFBF;
			border:1px solid #ADD1E7;
			font-size:12px;
			font-weight:bold;
			margin: 8px 5px 0px 5px;
			overflow:hidden;
			padding:5px;
			position:relative;
			width: 97%;
		}
		
		.informationPanel img {
			float:left;
			margin:0px 8px 0px 0px;
		}
		
		.informationPanel div {
			clear:none;
			margin-top:10px;
			overflow:hidden;
			padding:0px;
			position:relative;
		}					
			
	</style>	

	<!-- Header -->
	<div class="header_portal" id="headerTeams">
        <!-- Page Section -->
        <div class="page_section">
            <div>
                <h1 class="arial_black">{!$ObjectType.Team__c.label}</h1>
                <h2 class="arial_black">Administrator</h2>
            </div>
        </div>
		<!-- Search Box Container -->
		<div class="searchBox">
			<div>
				<div>
					<div class="center_gray">
						<form method="get" action="/apex/TeamSearchResult" onsubmit="return checkSearchLength();">
							<div class="search_box_input f_left">
								<div class="legend_portal">
									<img class="f_left" alt="" src="{!URLFOR($Resource.TeamsResources, 'images/layout/magnifier.gif')}" />
									<span>Find {!$ObjectType.Team__c.labelPlural}  </span>
								</div>
								<input type="text" value="Enter keyword or name" name="key" onfocus="setValue('');"  onblur="if(getValue(this)==''){ setValue('Enter keyword or name'); }"/>
							</div>
							<input type="submit" value="Search" class="search_btn f_left"/>
						</form>
					</div>
				</div>
			</div>
		</div> 
        <!-- Help for this page -->
        <div class="help">
            <div>
				<a href="javascript:;">Help for this page</a>  <img src="{!URLFOR($Resource.TeamsResources, 'images/layout/help_icon.gif')}" alt="" />
            </div>
        </div>
		<div class="gray_border"></div>
    </div>

	<div class="top_content">
		<div class="breadCrumb">
			<a class="smallLinkColor" href="/apex/AdminMainSetup">Administrator Setup</a>
			<span class="linkSeparator"> > </>
			
			<span class="smallLink">{!$ObjectType.Team__c.label} Profile List</span>
			<span class="linkSeparator"> 
			
			<span class="breadcrumb_actualpage"></span>
			
		</div>
	</div>
		<div class="divblackbtnProfileCenterMargin" >
		<a href="/apex/AdminProfile" class="blackbtnTitleBottom">
			<span>New</span>
		</a>
	</div> 
	
	<!-- Sidebar -->
	<div class="sidebar">			
		<!-- Quick links sidebar -->
		<c:TeamAdminQuickLinks />
	</div>
	
    <!-- Main Content Div -->
    <div class="main_cont">
        <div>
            <div class="main_cont">
                <div>
                     <div class="informationPanel" id="infoToUser" style="display:none;"></div>
                     <div class="holder">
                        <table>
                        	<tr><td class="teamTitleButton" >                        	
								 {!$ObjectType.Team__c.label} Profile List 							
		                        </td>
								<td>
								</td>	
							</tr>
						</table> 
                        </div>						
                        <div class="border_body_top">
                            &nbsp;
                        </div> 
		                <apex:form id="theForm">
		                     <apex:outputPanel layout="block" id="theGrid">					
								<table class="pageList sortable">
			                        <thead>
			                            <tr>
			                                <td class="manage_title_descriptionNoUnderline sorttable_nosort" width="22%">
			                                    Action
			                                </td>
			                                <td class="manage_title_description" width="23%">
			                                    Name
			                                </td>
			                                <td class="manage_title_description" width="25%">
			                                    Creator
			                                </td>
											  <td class="manage_title_description" width="20%">
			                                    Created date
			                                </td>
			                            </tr>
			                        </thead>
			                        <!-- Description  -->
			                        <tbody>
			                            <apex:repeat value="{!profiles}" var="profile">
				                            <tr>
				                                <td>
				                                	<span class="manage_detail_description_underline">
				                                  		<a href="/apex/AdminProfile?id={!profile.teamProfile.Id}">
				                                  			Edit
				                                  		</a> 
				                                  	</span>
				                                    <span class="separator">|</span>
				                                    <apex:outputpanel rendered="{!profile.hasMember}">
					                                    <a class="manage_detail_description_underline" href="javascript:;" onclick="getCountMembersForTeamProfile('{!profile.teamProfile.Id}', '{!profile.teamProfile.Name}');">
					                                    	Delete
					                                    </a>
					                               	</apex:outputpanel>
					                               	<apex:outputpanel rendered="{!NOT(profile.hasMember)}">
					                               		<apex:commandLink action="{!removeTeamProfileNoMembers}" oncomplete="reinitializeSort=true; sorttable.init();" rerender="theGrid" styleclass="manage_detail_description_underline" value="Delete" >
					                               			<apex:param name="idRmvTP" value="{!profile.teamProfile.Id}" />
					                               		</apex:commandLink>
					                               	</apex:outputpanel>
													<span class="separator">|</span>
													<span class="manage_detail_description_underline">
														<a href="/apex/AdminProfile?clone={!profile.teamProfile.Id}">
															Clone
														</a> 
													</span>
				                                </td>
				                                <td class="manage_detail_description_underlineColorBold">
				                                	<a class="manage_detail_description_underlineColorBold" href="/apex/AdminProfile?view={!profile.teamProfile.Id}">
														{!profile.teamProfile.Name}	
													</a>
				                                </td>
				                                <td class="manage_detail_description_underlineColor">
				                                    <a href="/apex/PeopleProfileDisplay?id={!profile.creator.Id}">
				                                    	{!profile.creator.Name}
				                                    </a>
				                                </td>
												  <td class="manage_detail_description">
				                                    {!profile.createdDate}
				                                </td>
				                            </tr>
			                            </apex:repeat>       
			                        </tbody>
			                    </table>
							</apex:outputPanel>
			                
			                <!-- Reload Event -->
			                <apex:actionFunction name="reloadProfileList" action="{!getTeamProfiles}" oncomplete="reinitializeSort=true; sorttable.init();modal.close();" rerender="theGrid"/>
							<apex:inputHidden id="oldProfileId" value="{!oldIdProfile}" />
							<apex:inputHidden id="newProfileId" value="{!newIdProfile}" />
	                	 	<!-- Reassign Profiles Event -->
							<apex:actionFunction name="reassignEvent" action="{!reAssignUsers}" rerender="theForm" oncomplete="reloadProfileList();"/>
							<script>
								var oldProfileElementId = '{!$Component.oldProfileId}';
								var newProfileElementId = '{!$Component.newProfileId}';
								//var reassingEventId 	= '{!$Component.reassignEvent}';
								//window.alert(oldProfileElementId+'['+$(oldProfileElementId).value+'] '+newProfileElementId+'['+$(newProfileElementId).value+']');
							</script>		
						</apex:form>                   
                    </div>                   
                </div>
            </div>
              <div class="divblackbtnProfileCenter">
				<a href="/apex/AdminProfile" class="blackbtnTitleBottom">
					<span>New</span>
				</a>
			</div> 
        </div>	
      </div>
	<script>
		readPortalCSSRules();
		
		function showScrollBar(){
			document.body.style.overflow = 'auto';
		}
		
		showScrollBar();
	</script>
	</html>

</apex:page>