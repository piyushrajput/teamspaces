<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:controller="com.salesforce.gantt.controller.*"
    xmlns:view="com.salesforce.gantt.view.*"
    width="100%" height="100%" layout="absolute" backgroundColor="#f3f3ec">
   
    <!-- Flex-Ajax Bridge keeps track of users that log out -->
    <fab:FABridge xmlns:fab="bridge.*" />
    
	<!-- Model, Controller, Services configuration -->    
    <!-- <controller:GanttComponents id="components"/> -->

	<mx:Script>
		<![CDATA[
			import com.salesforce.gantt.model.UI;
			import com.salesforce.gantt.model.GanttState;
			import mx.controls.Alert;
			import com.salesforce.gantt.controller.Components;
			import com.salesforce.gantt.model.UI;
			import com.salesforce.gantt.model.TaskDate;
			
			public function close() : String
			{	
				//logout user
				var x : int = mainView.barChart.barChartCanvas.x;
				var days : int = (x / UI.scale) * (-1) + 1;  
				var startDate : Date = Components.instance.calendar.add(TaskDate.startDate,days);
				
				var y : int = mainView.barChart.barChartCanvas.y;
				var position : int = (y / 30) * (-1) + 1;//va de 0 a n
				var scale : int = (this.width - 30) / UI.scale;
				
				var newGantState : GanttState = new GanttState(scale,startDate,position,Components.instance.session.user);
		    	if(Components.instance.ganttState != null)
		    	{
		    		newGantState.id = Components.instance.ganttState.id;
					Components.instance.salesforceService.ganttStateOperation.update(newGantState);
		    	}
		    	else
		    	{
		    		Components.instance.salesforceService.ganttStateOperation.create(newGantState);
		    	}
		    	
		    	Components.instance.salesforceService.authenticateOperation.deleteAuthenticateUser();
		    	
				return "0";
			}
		]]>
	</mx:Script>

	<!-- Top level View -->
	<view:MainView id="mainView" width="100%" height="100%"/>
	
	<!--
	LEVELS: 
	ALL (0)  Designates that messages of all logging levels should be logged.
	DEBUG (2)  Logs internal Flex activities. This is most useful when debugging an application.
	INFO (4)  Logs general information.
	WARN (6)  Logs a message when the application encounters a problem. These problems do not cause the application to stop running, but could lead to further errors.
	ERROR (8)  Logs a message when a critical service is not available or a situation has occurred that restricts the use of the application.
	FATAL (1000)  Logs a message when an event occurs that results in the failure of the application.
	--> 
    <mx:TraceTarget level="8" includeDate="true" includeTime="true" includeCategory="true" includeLevel="true">
        <mx:filters>
            <mx:Array>
                <mx:String>*</mx:String>
            </mx:Array>
        </mx:filters>
    </mx:TraceTarget>    

</mx:Application> 